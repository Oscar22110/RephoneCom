//
//  TableViewControllerReportes.swift
//  RephoneCom
//
//  Created by Oscar on 17/11/20.
//  Copyright Â© 2020 Oscar. All rights reserved.
//

import UIKit

class TableViewControllerReportes: UITableViewController {
    public var Reportes = [Reporte]()
    let jsonclass = JsonClass()
    //var Repo = Reporte(idreporte: 0, empleado: "", calidad: "", intensidad: 0.0, cxq: 0.0, velocidad: 0.0)

    @IBOutlet var Tabla: UITableView!
    
    @IBAction func AgregaReporte(_ sender: UIButton) {
        self.performSegue(withIdentifier: "segueReportes", sender: self)
    }
    
    @IBAction func DescargaReportes(_ sender: UIButton) {
        Reportes.removeAll()
        let datosEntrada = ["id":""] as NSMutableDictionary
        jsonclass.arrayFromJson(url: "WSRephone/getReportes.php", datos_enviados: datosEntrada){
            (array_respuesta) in
            DispatchQueue.main.async {
                let NoRegistros = array_respuesta?.count
                for i in stride(from: 0, to: NoRegistros!, by: 1){
                    let report = array_respuesta?.object(at: i) as! NSDictionary
                    let num = report.object(forKey: "IDREPORT") as! String?
                    let emple = report.object(forKey: "EMPLE") as! String?
                    let cali = report.object(forKey: "CALIDAD") as! String?
                    let inten = report.object(forKey: "INTENCIDAD") as! String?
                    let cxq = report.object(forKey: "CXQ") as! String?
                    let velo = report.object(forKey: "VELOCIDAD") as! String?
                 self.Reportes.append(Reporte(idreporte: num, empleado: emple, calidad: cali, intensidad: inten, cxq: cxq, velocidad: velo))
                }
                self.performSegue(withIdentifier: "segueReportesList", sender: self)
            }
        }
    }
    
    
    //@IBAction func btnAgregarReporte(_ sender: UIButton) {
        //self.performSegue(withIdentifier: "segueReportes", sender: self)
    //}
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        Tabla.reloadData()  //Dispara los eventos para llenar en table view controller
        
    }

    // MARK: - Table view data source

    override func numberOfSections(in tableView: UITableView) -> Int {
           // #warning Incomplete implementation, return the number of sections
           return 1 //Numero de secciones es de 1, seria el de Reportes.
       }

        override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
              // #warning Incomplete implementation, return the number of rows
           return Reportes.count //muestra el numero de productos que hay en el arreglo 3, 5 los que existan.
          }

       
        override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath)-> UITableViewCell {
              let cell = tableView.dequeueReusableCell(withIdentifier: "celdaReportes") as! TableViewCellReportes //Carga la celda prototipo

            let repo : Reporte
            repo = Reportes[indexPath.row]   //Sirve para saltar al siguiente registro y mostrar los productos guardaddos
            
            cell.lblEmpleado.text = repo.Emple
            cell.lblCalidad.text = repo.Cali
            cell.lblIntensidad.text = repo.Inten

            return cell
       }
       //Funcion que aparece un toast en el table view con los datos del elemento seleccionado
       /*override func tableView(_ tableView: UITableView, didDeselectRowAt indexPath: IndexPath) {
           let cte = Productos[indexPath.row]
           showToast(Titulo: "Producto seleccionado", Mensaje: "Nombre del Producto:\(cte.nomProd), Precio:\(cte.Precio)")
       }*/

      func showToast(Titulo : String, Mensaje : String){
           let alert = UIAlertController(title : Titulo , message: Mensaje, preferredStyle: UIAlertController.Style.alert)
           alert.addAction(UIAlertAction(title: "Aceptar", style: UIAlertAction.Style.default, handler: nil))
           
           self.present(alert,animated: true, completion: nil)

      }


}
