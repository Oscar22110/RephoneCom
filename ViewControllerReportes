/
//  ViewControllerReportes.swift
//  RephoneCom
//
//  Created by Oscar on 18/11/20.
//  Copyright © 2020 Oscar. All rights reserved.
//

import UIKit

class ViewControllerReportes: UIViewController {
     var Reportes = [Reporte]()

    @IBOutlet weak var txtNumReport: UITextField!
    @IBOutlet weak var txtEmpleReport: UITextField!
    @IBOutlet weak var txtCaliReport: UITextField!
    @IBOutlet weak var txtIntenReport: UITextField!
    @IBOutlet weak var txtCxqReport: UITextField!
    @IBOutlet weak var txtVeloReport: UITextField!
    let jsonclass = JsonClass()
    
    var db : AdminBd = AdminBd()
    //public var Repo = Reporte(idreporte: 0, empleado: "", calidad: "", intensidad: 0.0, cxq: 0.0, velocidad: 0.0)
    
    
    @IBAction func InsertReport(_ sender: UIButton) {
        if txtNumReport.text!.isEmpty || txtEmpleReport.text!.isEmpty || txtCaliReport.text!.isEmpty || txtIntenReport.text!.isEmpty || txtCxqReport.text!.isEmpty || txtVeloReport.text!.isEmpty{
               showToast(Titulo: "Error", Mensaje: "Falta informaciòn")
                   txtNumReport.becomeFirstResponder()
               }
               else{
            let num = txtNumReport.text
            let emple = txtEmpleReport.text
            let cali = txtCaliReport.text
            let inten = txtIntenReport.text
            let cxq = txtCxqReport.text
            let velo = txtVeloReport.text
            db.InsertReporte(idreporte: num!, empleado: emple!, calidad: cali!, intensidad: inten!, cxq: cxq!, velocidad: velo!)
    
            //Productos.append(Producto(idProducto: idp!, nomProducto: nomp, precioProducto: prec!))
                   txtNumReport.text = ""
                   txtEmpleReport.text = ""
                   txtCaliReport.text = ""
                   txtIntenReport.text = ""
                   txtCxqReport.text = ""
                   txtVeloReport.text = ""
                   showToast(Titulo: "Guardando", Mensaje: "Reporte Agregado")
                   txtNumReport.becomeFirstResponder()
               }

    }
    
    @IBAction func UpdateReport(_ sender: UIButton) {
         if txtNumReport.text!.isEmpty || txtEmpleReport.text!.isEmpty || txtCaliReport.text!.isEmpty || txtIntenReport.text!.isEmpty || txtCxqReport.text!.isEmpty || txtVeloReport.text!.isEmpty{
                      showToast(Titulo: "Error", Mensaje: "Falta informaciòn")
                          txtNumReport.becomeFirstResponder()
                      }
        else{
            let idr = String (txtNumReport.text!)
            let emple = String (txtEmpleReport.text!)
            let cali = String (txtCaliReport.text!)
            let inten = String (txtIntenReport.text!)
            let cxq = String (txtCxqReport.text!)
            let velo = String (txtVeloReport.text!)
            db.UpdateReportes(idreporte: idr, empleado: emple, calidad: cali, intensidad: inten, cxq: cxq, velocidad: velo)
            txtNumReport.text = ""
            txtEmpleReport.text = ""
            txtCaliReport.text = ""
            txtIntenReport.text = ""
            txtCxqReport.text = ""
            txtVeloReport.text = ""
            showToast(Titulo: "Guardando", Mensaje: "Reporte Actualizado")
            txtNumReport.becomeFirstResponder()
        }
    }
    
    @IBAction func DeleteReport(_ sender: UIButton) {
        if txtNumReport.text!.isEmpty {
                     showToast(Titulo: "Error", Mensaje: "Falta informaciòn")
                         txtNumReport.becomeFirstResponder()
                     }
                     else{
                         let numreport = txtNumReport.text
                         db.EliminarReporte(idreporte: numreport!)
                         txtNumReport.text = ""
                         txtEmpleReport.text = ""
                         txtCaliReport.text = ""
                         txtIntenReport.text = ""
                         txtCxqReport.text = ""
                         txtVeloReport.text = ""
                         showToast(Titulo: "Guardando", Mensaje: "Reporte Eliminado")
                         txtNumReport.becomeFirstResponder()
                     }
    }
    
    @IBAction func ConsultaReport(_ sender: UIButton) {
        if txtNumReport.text!.isEmpty{
                   showToast(Titulo: "Error", Mensaje: "Falta ingresar Nùmero del reporte")
                   txtNumReport.becomeFirstResponder()
               }
               else{
                   let idr = String(txtNumReport.text!)
                   let repor : Reporte = db.ConsultaByIdReport(idreporte: idr)
                   txtEmpleReport.text = repor.Emple
                   txtCaliReport.text = repor.Cali
                   txtIntenReport.text = repor.Inten
                   txtCxqReport.text = repor.Cxq
                   txtVeloReport.text = repor.Velo
                   showToast(Titulo: "Buscando", Mensaje: "Reporte Localizado")
                   txtNumReport.becomeFirstResponder()
               }
    }
    
    @IBAction func ListaReport(_ sender: UIButton) {
         Reportes.removeAll()
               let datosEntrada = ["id":""] as NSMutableDictionary
               jsonclass.arrayFromJson(url: "WSRephone/getReportes.php", datos_enviados: datosEntrada){
                   (array_respuesta) in
                   DispatchQueue.main.async {
                       let NoRegistros = array_respuesta?.count
                       for i in stride(from: 0, to: NoRegistros!, by: 1){
                           let report = array_respuesta?.object(at: i) as! NSDictionary
                           let num = report.object(forKey: "IDREPORT") as! String?
                           let emple = report.object(forKey: "EMPLE") as! String?
                           let cali = report.object(forKey: "CALIDAD") as! String?
                           let inten = report.object(forKey: "INTENCIDAD") as! String?
                           let cxq = report.object(forKey: "CXQ") as! String?
                           let velo = report.object(forKey: "VELOCIDAD") as! String?
                        self.Reportes.append(Reporte(idreporte: num, empleado: emple, calidad: cali, intensidad: inten, cxq: cxq, velocidad: velo))
                       }
                       self.performSegue(withIdentifier: "segueReportesList", sender: self)
                   }
               }
    }
    //segueReportesList
    override func viewDidLoad() {
        super.viewDidLoad()

        // Do any additional setup after loading the view.
    }
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
    if segue.identifier == "segueReportesList"{
        let table = segue.destination as! TableViewControllerReportes
      table.Reportes = Reportes
    }
}
    
    func showToast(Titulo : String, Mensaje : String){
                 let alert = UIAlertController(title : Titulo , message: Mensaje, preferredStyle: UIAlertController.Style.alert)
                 alert.addAction(UIAlertAction(title: "Aceptar", style: UIAlertAction.Style.default, handler: nil))
                 
                 self.present(alert,animated: true, completion: nil)

            }

}

